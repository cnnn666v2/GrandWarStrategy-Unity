### YamlMime:ManagedReference
items:
- uid: GrandWarStrategy.Logic.TrainingDivisions
  commentId: T:GrandWarStrategy.Logic.TrainingDivisions
  id: TrainingDivisions
  parent: GrandWarStrategy.Logic
  children:
  - GrandWarStrategy.Logic.TrainingDivisions.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Transform)
  - GrandWarStrategy.Logic.TrainingDivisions.amount
  - GrandWarStrategy.Logic.TrainingDivisions.cost
  - GrandWarStrategy.Logic.TrainingDivisions.maintenance
  - GrandWarStrategy.Logic.TrainingDivisions.trainingDestination
  - GrandWarStrategy.Logic.TrainingDivisions.trainingTime
  langs:
  - csharp
  - vb
  name: TrainingDivisions
  nameWithType: TrainingDivisions
  fullName: GrandWarStrategy.Logic.TrainingDivisions
  type: Class
  source:
    id: TrainingDivisions
    path: ''
    startLine: 97
  assemblies:
  - cs.temp.dll
  namespace: GrandWarStrategy.Logic
  syntax:
    content: public class TrainingDivisions
    content.vb: Public Class TrainingDivisions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: GrandWarStrategy.Logic.TrainingDivisions.amount
  commentId: F:GrandWarStrategy.Logic.TrainingDivisions.amount
  id: amount
  parent: GrandWarStrategy.Logic.TrainingDivisions
  langs:
  - csharp
  - vb
  name: amount
  nameWithType: TrainingDivisions.amount
  fullName: GrandWarStrategy.Logic.TrainingDivisions.amount
  type: Field
  source:
    id: amount
    path: ''
    startLine: 99
  assemblies:
  - cs.temp.dll
  namespace: GrandWarStrategy.Logic
  syntax:
    content: public int amount
    return:
      type: System.Int32
    content.vb: Public amount As Integer
- uid: GrandWarStrategy.Logic.TrainingDivisions.cost
  commentId: F:GrandWarStrategy.Logic.TrainingDivisions.cost
  id: cost
  parent: GrandWarStrategy.Logic.TrainingDivisions
  langs:
  - csharp
  - vb
  name: cost
  nameWithType: TrainingDivisions.cost
  fullName: GrandWarStrategy.Logic.TrainingDivisions.cost
  type: Field
  source:
    id: cost
    path: ''
    startLine: 100
  assemblies:
  - cs.temp.dll
  namespace: GrandWarStrategy.Logic
  syntax:
    content: public int cost
    return:
      type: System.Int32
    content.vb: Public cost As Integer
- uid: GrandWarStrategy.Logic.TrainingDivisions.maintenance
  commentId: F:GrandWarStrategy.Logic.TrainingDivisions.maintenance
  id: maintenance
  parent: GrandWarStrategy.Logic.TrainingDivisions
  langs:
  - csharp
  - vb
  name: maintenance
  nameWithType: TrainingDivisions.maintenance
  fullName: GrandWarStrategy.Logic.TrainingDivisions.maintenance
  type: Field
  source:
    id: maintenance
    path: ''
    startLine: 101
  assemblies:
  - cs.temp.dll
  namespace: GrandWarStrategy.Logic
  syntax:
    content: public int maintenance
    return:
      type: System.Int32
    content.vb: Public maintenance As Integer
- uid: GrandWarStrategy.Logic.TrainingDivisions.trainingTime
  commentId: F:GrandWarStrategy.Logic.TrainingDivisions.trainingTime
  id: trainingTime
  parent: GrandWarStrategy.Logic.TrainingDivisions
  langs:
  - csharp
  - vb
  name: trainingTime
  nameWithType: TrainingDivisions.trainingTime
  fullName: GrandWarStrategy.Logic.TrainingDivisions.trainingTime
  type: Field
  source:
    id: trainingTime
    path: ''
    startLine: 102
  assemblies:
  - cs.temp.dll
  namespace: GrandWarStrategy.Logic
  syntax:
    content: public int trainingTime
    return:
      type: System.Int32
    content.vb: Public trainingTime As Integer
- uid: GrandWarStrategy.Logic.TrainingDivisions.trainingDestination
  commentId: F:GrandWarStrategy.Logic.TrainingDivisions.trainingDestination
  id: trainingDestination
  parent: GrandWarStrategy.Logic.TrainingDivisions
  langs:
  - csharp
  - vb
  name: trainingDestination
  nameWithType: TrainingDivisions.trainingDestination
  fullName: GrandWarStrategy.Logic.TrainingDivisions.trainingDestination
  type: Field
  source:
    id: trainingDestination
    path: ''
    startLine: 103
  assemblies:
  - cs.temp.dll
  namespace: GrandWarStrategy.Logic
  syntax:
    content: public Transform trainingDestination
    return:
      type: Global.Transform
    content.vb: Public trainingDestination As Transform
- uid: GrandWarStrategy.Logic.TrainingDivisions.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Transform)
  commentId: M:GrandWarStrategy.Logic.TrainingDivisions.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Transform)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Transform)'
  parent: GrandWarStrategy.Logic.TrainingDivisions
  langs:
  - csharp
  - vb
  name: TrainingDivisions(int, int, int, int, Transform)
  nameWithType: TrainingDivisions.TrainingDivisions(int, int, int, int, Transform)
  fullName: GrandWarStrategy.Logic.TrainingDivisions.TrainingDivisions(int, int, int, int, Transform)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 105
  assemblies:
  - cs.temp.dll
  namespace: GrandWarStrategy.Logic
  syntax:
    content: public TrainingDivisions(int amount, int cost, int maintenance, int trainingTime, Transform trainingDestination)
    parameters:
    - id: amount
      type: System.Int32
    - id: cost
      type: System.Int32
    - id: maintenance
      type: System.Int32
    - id: trainingTime
      type: System.Int32
    - id: trainingDestination
      type: Global.Transform
    content.vb: Public Sub New(amount As Integer, cost As Integer, maintenance As Integer, trainingTime As Integer, trainingDestination As Transform)
  overload: GrandWarStrategy.Logic.TrainingDivisions.#ctor*
  nameWithType.vb: TrainingDivisions.New(Integer, Integer, Integer, Integer, Transform)
  fullName.vb: GrandWarStrategy.Logic.TrainingDivisions.New(Integer, Integer, Integer, Integer, Transform)
  name.vb: New(Integer, Integer, Integer, Integer, Transform)
references:
- uid: GrandWarStrategy.Logic
  commentId: N:GrandWarStrategy.Logic
  name: GrandWarStrategy.Logic
  nameWithType: GrandWarStrategy.Logic
  fullName: GrandWarStrategy.Logic
  spec.csharp:
  - uid: GrandWarStrategy
    name: GrandWarStrategy
  - name: .
  - uid: GrandWarStrategy.Logic
    name: Logic
  spec.vb:
  - uid: GrandWarStrategy
    name: GrandWarStrategy
  - name: .
  - uid: GrandWarStrategy.Logic
    name: Logic
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.Transform
  isExternal: true
  name: Transform
  nameWithType: Transform
  fullName: Transform
- uid: GrandWarStrategy.Logic.TrainingDivisions.#ctor*
  commentId: Overload:GrandWarStrategy.Logic.TrainingDivisions.#ctor
  name: TrainingDivisions
  nameWithType: TrainingDivisions.TrainingDivisions
  fullName: GrandWarStrategy.Logic.TrainingDivisions.TrainingDivisions
  nameWithType.vb: TrainingDivisions.New
  fullName.vb: GrandWarStrategy.Logic.TrainingDivisions.New
  name.vb: New
