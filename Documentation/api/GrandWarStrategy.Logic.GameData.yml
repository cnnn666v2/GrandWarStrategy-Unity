### YamlMime:ManagedReference
items:
- uid: GrandWarStrategy.Logic.GameData
  commentId: T:GrandWarStrategy.Logic.GameData
  id: GameData
  parent: GrandWarStrategy.Logic
  children:
  - GrandWarStrategy.Logic.GameData.colors
  - GrandWarStrategy.Logic.GameData.countries
  - GrandWarStrategy.Logic.GameData.governments
  - GrandWarStrategy.Logic.GameData.movingDivisions
  - GrandWarStrategy.Logic.GameData.playingAsTag
  - GrandWarStrategy.Logic.GameData.provincesInformation
  - GrandWarStrategy.Logic.GameData.provincesMeshRender
  - GrandWarStrategy.Logic.GameData.trainingDivisions
  - GrandWarStrategy.Logic.GameData.turnCount
  - GrandWarStrategy.Logic.GameData.wars
  langs:
  - csharp
  - vb
  name: GameData
  nameWithType: GameData
  fullName: GrandWarStrategy.Logic.GameData
  type: Class
  source:
    id: GameData
    path: ''
    startLine: 68
  assemblies:
  - cs.temp.dll
  namespace: GrandWarStrategy.Logic
  syntax:
    content: 'public class GameData : MonoBehaviour'
    content.vb: Public Class GameData Inherits MonoBehaviour
  inheritance:
  - System.Object
- uid: GrandWarStrategy.Logic.GameData.colors
  commentId: F:GrandWarStrategy.Logic.GameData.colors
  id: colors
  parent: GrandWarStrategy.Logic.GameData
  langs:
  - csharp
  - vb
  name: colors
  nameWithType: GameData.colors
  fullName: GrandWarStrategy.Logic.GameData.colors
  type: Field
  source:
    id: colors
    path: ''
    startLine: 70
  assemblies:
  - cs.temp.dll
  namespace: GrandWarStrategy.Logic
  syntax:
    content: public List<Color> colors
    return:
      type: Global.List{Color}
    content.vb: Public colors As List(Of Color)
- uid: GrandWarStrategy.Logic.GameData.countries
  commentId: F:GrandWarStrategy.Logic.GameData.countries
  id: countries
  parent: GrandWarStrategy.Logic.GameData
  langs:
  - csharp
  - vb
  name: countries
  nameWithType: GameData.countries
  fullName: GrandWarStrategy.Logic.GameData.countries
  type: Field
  source:
    id: countries
    path: ''
    startLine: 71
  assemblies:
  - cs.temp.dll
  namespace: GrandWarStrategy.Logic
  syntax:
    content: public List<Country> countries
    return:
      type: Global.List{Country}
    content.vb: Public countries As List(Of Country)
- uid: GrandWarStrategy.Logic.GameData.governments
  commentId: F:GrandWarStrategy.Logic.GameData.governments
  id: governments
  parent: GrandWarStrategy.Logic.GameData
  langs:
  - csharp
  - vb
  name: governments
  nameWithType: GameData.governments
  fullName: GrandWarStrategy.Logic.GameData.governments
  type: Field
  source:
    id: governments
    path: ''
    startLine: 72
  assemblies:
  - cs.temp.dll
  namespace: GrandWarStrategy.Logic
  syntax:
    content: public List<Government> governments
    return:
      type: Global.List{Government}
    content.vb: Public governments As List(Of Government)
- uid: GrandWarStrategy.Logic.GameData.provincesInformation
  commentId: F:GrandWarStrategy.Logic.GameData.provincesInformation
  id: provincesInformation
  parent: GrandWarStrategy.Logic.GameData
  langs:
  - csharp
  - vb
  name: provincesInformation
  nameWithType: GameData.provincesInformation
  fullName: GrandWarStrategy.Logic.GameData.provincesInformation
  type: Field
  source:
    id: provincesInformation
    path: ''
    startLine: 73
  assemblies:
  - cs.temp.dll
  namespace: GrandWarStrategy.Logic
  syntax:
    content: public List<ProvinceData> provincesInformation
    return:
      type: Global.List{ProvinceData}
    content.vb: Public provincesInformation As List(Of ProvinceData)
- uid: GrandWarStrategy.Logic.GameData.provincesMeshRender
  commentId: F:GrandWarStrategy.Logic.GameData.provincesMeshRender
  id: provincesMeshRender
  parent: GrandWarStrategy.Logic.GameData
  langs:
  - csharp
  - vb
  name: provincesMeshRender
  nameWithType: GameData.provincesMeshRender
  fullName: GrandWarStrategy.Logic.GameData.provincesMeshRender
  type: Field
  source:
    id: provincesMeshRender
    path: ''
    startLine: 74
  assemblies:
  - cs.temp.dll
  namespace: GrandWarStrategy.Logic
  syntax:
    content: public List<GameObject> provincesMeshRender
    return:
      type: Global.List{GameObject}
    content.vb: Public provincesMeshRender As List(Of GameObject)
- uid: GrandWarStrategy.Logic.GameData.playingAsTag
  commentId: F:GrandWarStrategy.Logic.GameData.playingAsTag
  id: playingAsTag
  parent: GrandWarStrategy.Logic.GameData
  langs:
  - csharp
  - vb
  name: playingAsTag
  nameWithType: GameData.playingAsTag
  fullName: GrandWarStrategy.Logic.GameData.playingAsTag
  type: Field
  source:
    id: playingAsTag
    path: ''
    startLine: 75
  assemblies:
  - cs.temp.dll
  namespace: GrandWarStrategy.Logic
  syntax:
    content: public string playingAsTag
    return:
      type: System.String
    content.vb: Public playingAsTag As String
- uid: GrandWarStrategy.Logic.GameData.turnCount
  commentId: F:GrandWarStrategy.Logic.GameData.turnCount
  id: turnCount
  parent: GrandWarStrategy.Logic.GameData
  langs:
  - csharp
  - vb
  name: turnCount
  nameWithType: GameData.turnCount
  fullName: GrandWarStrategy.Logic.GameData.turnCount
  type: Field
  source:
    id: turnCount
    path: ''
    startLine: 76
  assemblies:
  - cs.temp.dll
  namespace: GrandWarStrategy.Logic
  syntax:
    content: public int turnCount
    return:
      type: System.Int32
    content.vb: Public turnCount As Integer
- uid: GrandWarStrategy.Logic.GameData.wars
  commentId: F:GrandWarStrategy.Logic.GameData.wars
  id: wars
  parent: GrandWarStrategy.Logic.GameData
  langs:
  - csharp
  - vb
  name: wars
  nameWithType: GameData.wars
  fullName: GrandWarStrategy.Logic.GameData.wars
  type: Field
  source:
    id: wars
    path: ''
    startLine: 77
  assemblies:
  - cs.temp.dll
  namespace: GrandWarStrategy.Logic
  syntax:
    content: public List<War> wars
    return:
      type: Global.List{War}
    content.vb: Public wars As List(Of War)
- uid: GrandWarStrategy.Logic.GameData.movingDivisions
  commentId: F:GrandWarStrategy.Logic.GameData.movingDivisions
  id: movingDivisions
  parent: GrandWarStrategy.Logic.GameData
  langs:
  - csharp
  - vb
  name: movingDivisions
  nameWithType: GameData.movingDivisions
  fullName: GrandWarStrategy.Logic.GameData.movingDivisions
  type: Field
  source:
    id: movingDivisions
    path: ''
    startLine: 78
  assemblies:
  - cs.temp.dll
  namespace: GrandWarStrategy.Logic
  syntax:
    content: public List<MovingDivisions> movingDivisions
    return:
      type: Global.List{GrandWarStrategy.Logic.MovingDivisions}
    content.vb: Public movingDivisions As List(Of MovingDivisions)
- uid: GrandWarStrategy.Logic.GameData.trainingDivisions
  commentId: F:GrandWarStrategy.Logic.GameData.trainingDivisions
  id: trainingDivisions
  parent: GrandWarStrategy.Logic.GameData
  langs:
  - csharp
  - vb
  name: trainingDivisions
  nameWithType: GameData.trainingDivisions
  fullName: GrandWarStrategy.Logic.GameData.trainingDivisions
  type: Field
  source:
    id: trainingDivisions
    path: ''
    startLine: 79
  assemblies:
  - cs.temp.dll
  namespace: GrandWarStrategy.Logic
  syntax:
    content: public List<TrainingDivisions> trainingDivisions
    return:
      type: Global.List{GrandWarStrategy.Logic.TrainingDivisions}
    content.vb: Public trainingDivisions As List(Of TrainingDivisions)
references:
- uid: GrandWarStrategy.Logic
  commentId: N:GrandWarStrategy.Logic
  name: GrandWarStrategy.Logic
  nameWithType: GrandWarStrategy.Logic
  fullName: GrandWarStrategy.Logic
  spec.csharp:
  - uid: GrandWarStrategy
    name: GrandWarStrategy
  - name: .
  - uid: GrandWarStrategy.Logic
    name: Logic
  spec.vb:
  - uid: GrandWarStrategy
    name: GrandWarStrategy
  - name: .
  - uid: GrandWarStrategy.Logic
    name: Logic
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.List{Color}
  commentId: '!:Global.List{Color}'
  definition: Global.List`1
  name: List<Color>
  nameWithType: List<Color>
  fullName: List<Color>
  nameWithType.vb: List(Of Color)
  fullName.vb: List(Of Color)
  name.vb: List(Of Color)
  spec.csharp:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.Color
    name: Color
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.Color
    name: Color
    isExternal: true
  - name: )
- uid: Global.List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: <
  - name: ''
  - name: '>'
  spec.vb:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: ''
  - name: )
- uid: Global.List{Country}
  commentId: '!:Global.List{Country}'
  definition: Global.List`1
  name: List<Country>
  nameWithType: List<Country>
  fullName: List<Country>
  nameWithType.vb: List(Of Country)
  fullName.vb: List(Of Country)
  name.vb: List(Of Country)
  spec.csharp:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.Country
    name: Country
  - name: '>'
  spec.vb:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.Country
    name: Country
  - name: )
- uid: Global.List{Government}
  commentId: '!:Global.List{Government}'
  definition: Global.List`1
  name: List<Government>
  nameWithType: List<Government>
  fullName: List<Government>
  nameWithType.vb: List(Of Government)
  fullName.vb: List(Of Government)
  name.vb: List(Of Government)
  spec.csharp:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.Government
    name: Government
  - name: '>'
  spec.vb:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.Government
    name: Government
  - name: )
- uid: Global.List{ProvinceData}
  commentId: '!:Global.List{ProvinceData}'
  definition: Global.List`1
  name: List<ProvinceData>
  nameWithType: List<ProvinceData>
  fullName: List<ProvinceData>
  nameWithType.vb: List(Of ProvinceData)
  fullName.vb: List(Of ProvinceData)
  name.vb: List(Of ProvinceData)
  spec.csharp:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.ProvinceData
    name: ProvinceData
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.ProvinceData
    name: ProvinceData
    isExternal: true
  - name: )
- uid: Global.List{GameObject}
  commentId: '!:Global.List{GameObject}'
  definition: Global.List`1
  name: List<GameObject>
  nameWithType: List<GameObject>
  fullName: List<GameObject>
  nameWithType.vb: List(Of GameObject)
  fullName.vb: List(Of GameObject)
  name.vb: List(Of GameObject)
  spec.csharp:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.GameObject
    name: GameObject
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.GameObject
    name: GameObject
    isExternal: true
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.List{War}
  commentId: '!:Global.List{War}'
  definition: Global.List`1
  name: List<War>
  nameWithType: List<War>
  fullName: List<War>
  nameWithType.vb: List(Of War)
  fullName.vb: List(Of War)
  name.vb: List(Of War)
  spec.csharp:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.War
    name: War
  - name: '>'
  spec.vb:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.War
    name: War
  - name: )
- uid: Global.List{GrandWarStrategy.Logic.MovingDivisions}
  commentId: '!:Global.List{GrandWarStrategy.Logic.MovingDivisions}'
  definition: Global.List`1
  name: List<MovingDivisions>
  nameWithType: List<MovingDivisions>
  fullName: List<GrandWarStrategy.Logic.MovingDivisions>
  nameWithType.vb: List(Of MovingDivisions)
  fullName.vb: List(Of GrandWarStrategy.Logic.MovingDivisions)
  name.vb: List(Of MovingDivisions)
  spec.csharp:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: <
  - uid: GrandWarStrategy.Logic.MovingDivisions
    name: MovingDivisions
  - name: '>'
  spec.vb:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: GrandWarStrategy.Logic.MovingDivisions
    name: MovingDivisions
  - name: )
- uid: Global.List{GrandWarStrategy.Logic.TrainingDivisions}
  commentId: '!:Global.List{GrandWarStrategy.Logic.TrainingDivisions}'
  definition: Global.List`1
  name: List<TrainingDivisions>
  nameWithType: List<TrainingDivisions>
  fullName: List<GrandWarStrategy.Logic.TrainingDivisions>
  nameWithType.vb: List(Of TrainingDivisions)
  fullName.vb: List(Of GrandWarStrategy.Logic.TrainingDivisions)
  name.vb: List(Of TrainingDivisions)
  spec.csharp:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: <
  - uid: GrandWarStrategy.Logic.TrainingDivisions
    name: TrainingDivisions
  - name: '>'
  spec.vb:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: GrandWarStrategy.Logic.TrainingDivisions
    name: TrainingDivisions
  - name: )
