### YamlMime:ManagedReference
items:
- uid: GrandWarStrategy.Logic.MovingDivisions
  commentId: T:GrandWarStrategy.Logic.MovingDivisions
  id: MovingDivisions
  parent: GrandWarStrategy.Logic
  children:
  - GrandWarStrategy.Logic.MovingDivisions.#ctor(Army,ProvinceData,ProvinceData,System.Int32)
  - GrandWarStrategy.Logic.MovingDivisions.army
  - GrandWarStrategy.Logic.MovingDivisions.destination
  - GrandWarStrategy.Logic.MovingDivisions.stayingIn
  - GrandWarStrategy.Logic.MovingDivisions.travelTime
  langs:
  - csharp
  - vb
  name: MovingDivisions
  nameWithType: MovingDivisions
  fullName: GrandWarStrategy.Logic.MovingDivisions
  type: Class
  source:
    id: MovingDivisions
    path: ''
    startLine: 82
  assemblies:
  - cs.temp.dll
  namespace: GrandWarStrategy.Logic
  syntax:
    content: public class MovingDivisions
    content.vb: Public Class MovingDivisions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: GrandWarStrategy.Logic.MovingDivisions.army
  commentId: F:GrandWarStrategy.Logic.MovingDivisions.army
  id: army
  parent: GrandWarStrategy.Logic.MovingDivisions
  langs:
  - csharp
  - vb
  name: army
  nameWithType: MovingDivisions.army
  fullName: GrandWarStrategy.Logic.MovingDivisions.army
  type: Field
  source:
    id: army
    path: ''
    startLine: 84
  assemblies:
  - cs.temp.dll
  namespace: GrandWarStrategy.Logic
  syntax:
    content: public Army army
    return:
      type: Global.Army
    content.vb: Public army As Army
- uid: GrandWarStrategy.Logic.MovingDivisions.stayingIn
  commentId: F:GrandWarStrategy.Logic.MovingDivisions.stayingIn
  id: stayingIn
  parent: GrandWarStrategy.Logic.MovingDivisions
  langs:
  - csharp
  - vb
  name: stayingIn
  nameWithType: MovingDivisions.stayingIn
  fullName: GrandWarStrategy.Logic.MovingDivisions.stayingIn
  type: Field
  source:
    id: stayingIn
    path: ''
    startLine: 85
  assemblies:
  - cs.temp.dll
  namespace: GrandWarStrategy.Logic
  syntax:
    content: public ProvinceData stayingIn
    return:
      type: Global.ProvinceData
    content.vb: Public stayingIn As ProvinceData
- uid: GrandWarStrategy.Logic.MovingDivisions.destination
  commentId: F:GrandWarStrategy.Logic.MovingDivisions.destination
  id: destination
  parent: GrandWarStrategy.Logic.MovingDivisions
  langs:
  - csharp
  - vb
  name: destination
  nameWithType: MovingDivisions.destination
  fullName: GrandWarStrategy.Logic.MovingDivisions.destination
  type: Field
  source:
    id: destination
    path: ''
    startLine: 85
  assemblies:
  - cs.temp.dll
  namespace: GrandWarStrategy.Logic
  syntax:
    content: public ProvinceData destination
    return:
      type: Global.ProvinceData
    content.vb: Public destination As ProvinceData
- uid: GrandWarStrategy.Logic.MovingDivisions.travelTime
  commentId: F:GrandWarStrategy.Logic.MovingDivisions.travelTime
  id: travelTime
  parent: GrandWarStrategy.Logic.MovingDivisions
  langs:
  - csharp
  - vb
  name: travelTime
  nameWithType: MovingDivisions.travelTime
  fullName: GrandWarStrategy.Logic.MovingDivisions.travelTime
  type: Field
  source:
    id: travelTime
    path: ''
    startLine: 86
  assemblies:
  - cs.temp.dll
  namespace: GrandWarStrategy.Logic
  syntax:
    content: public int travelTime
    return:
      type: System.Int32
    content.vb: Public travelTime As Integer
- uid: GrandWarStrategy.Logic.MovingDivisions.#ctor(Army,ProvinceData,ProvinceData,System.Int32)
  commentId: M:GrandWarStrategy.Logic.MovingDivisions.#ctor(Army,ProvinceData,ProvinceData,System.Int32)
  id: '#ctor(Army,ProvinceData,ProvinceData,System.Int32)'
  parent: GrandWarStrategy.Logic.MovingDivisions
  langs:
  - csharp
  - vb
  name: MovingDivisions(Army, ProvinceData, ProvinceData, int)
  nameWithType: MovingDivisions.MovingDivisions(Army, ProvinceData, ProvinceData, int)
  fullName: GrandWarStrategy.Logic.MovingDivisions.MovingDivisions(Army, ProvinceData, ProvinceData, int)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 88
  assemblies:
  - cs.temp.dll
  namespace: GrandWarStrategy.Logic
  syntax:
    content: public MovingDivisions(Army army, ProvinceData stayingIn, ProvinceData destination, int travelTime)
    parameters:
    - id: army
      type: Global.Army
    - id: stayingIn
      type: Global.ProvinceData
    - id: destination
      type: Global.ProvinceData
    - id: travelTime
      type: System.Int32
    content.vb: Public Sub New(army As Army, stayingIn As ProvinceData, destination As ProvinceData, travelTime As Integer)
  overload: GrandWarStrategy.Logic.MovingDivisions.#ctor*
  nameWithType.vb: MovingDivisions.New(Army, ProvinceData, ProvinceData, Integer)
  fullName.vb: GrandWarStrategy.Logic.MovingDivisions.New(Army, ProvinceData, ProvinceData, Integer)
  name.vb: New(Army, ProvinceData, ProvinceData, Integer)
references:
- uid: GrandWarStrategy.Logic
  commentId: N:GrandWarStrategy.Logic
  name: GrandWarStrategy.Logic
  nameWithType: GrandWarStrategy.Logic
  fullName: GrandWarStrategy.Logic
  spec.csharp:
  - uid: GrandWarStrategy
    name: GrandWarStrategy
  - name: .
  - uid: GrandWarStrategy.Logic
    name: Logic
  spec.vb:
  - uid: GrandWarStrategy
    name: GrandWarStrategy
  - name: .
  - uid: GrandWarStrategy.Logic
    name: Logic
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.Army
  isExternal: true
  name: Army
  nameWithType: Army
  fullName: Army
- uid: Global.ProvinceData
  isExternal: true
  name: ProvinceData
  nameWithType: ProvinceData
  fullName: ProvinceData
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: GrandWarStrategy.Logic.MovingDivisions.#ctor*
  commentId: Overload:GrandWarStrategy.Logic.MovingDivisions.#ctor
  name: MovingDivisions
  nameWithType: MovingDivisions.MovingDivisions
  fullName: GrandWarStrategy.Logic.MovingDivisions.MovingDivisions
  nameWithType.vb: MovingDivisions.New
  fullName.vb: GrandWarStrategy.Logic.MovingDivisions.New
  name.vb: New
