### YamlMime:ManagedReference
items:
- uid: GrandWarStrategy.Province.Construction
  commentId: T:GrandWarStrategy.Province.Construction
  id: Construction
  parent: GrandWarStrategy.Province
  children:
  - GrandWarStrategy.Province.Construction.#ctor(Building,System.Int32)
  - GrandWarStrategy.Province.Construction.building
  - GrandWarStrategy.Province.Construction.turnsRemaining
  langs:
  - csharp
  - vb
  name: Construction
  nameWithType: Construction
  fullName: GrandWarStrategy.Province.Construction
  type: Class
  source:
    id: Construction
    path: ''
    startLine: 631
  assemblies:
  - cs.temp.dll
  namespace: GrandWarStrategy.Province
  syntax:
    content: public class Construction
    content.vb: Public Class Construction
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: GrandWarStrategy.Province.Construction.building
  commentId: F:GrandWarStrategy.Province.Construction.building
  id: building
  parent: GrandWarStrategy.Province.Construction
  langs:
  - csharp
  - vb
  name: building
  nameWithType: Construction.building
  fullName: GrandWarStrategy.Province.Construction.building
  type: Field
  source:
    id: building
    path: ''
    startLine: 633
  assemblies:
  - cs.temp.dll
  namespace: GrandWarStrategy.Province
  syntax:
    content: public Building building
    return:
      type: Global.Building
    content.vb: Public building As Building
- uid: GrandWarStrategy.Province.Construction.turnsRemaining
  commentId: F:GrandWarStrategy.Province.Construction.turnsRemaining
  id: turnsRemaining
  parent: GrandWarStrategy.Province.Construction
  langs:
  - csharp
  - vb
  name: turnsRemaining
  nameWithType: Construction.turnsRemaining
  fullName: GrandWarStrategy.Province.Construction.turnsRemaining
  type: Field
  source:
    id: turnsRemaining
    path: ''
    startLine: 634
  assemblies:
  - cs.temp.dll
  namespace: GrandWarStrategy.Province
  syntax:
    content: public int turnsRemaining
    return:
      type: System.Int32
    content.vb: Public turnsRemaining As Integer
- uid: GrandWarStrategy.Province.Construction.#ctor(Building,System.Int32)
  commentId: M:GrandWarStrategy.Province.Construction.#ctor(Building,System.Int32)
  id: '#ctor(Building,System.Int32)'
  parent: GrandWarStrategy.Province.Construction
  langs:
  - csharp
  - vb
  name: Construction(Building, int)
  nameWithType: Construction.Construction(Building, int)
  fullName: GrandWarStrategy.Province.Construction.Construction(Building, int)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 636
  assemblies:
  - cs.temp.dll
  namespace: GrandWarStrategy.Province
  syntax:
    content: public Construction(Building building, int turnsRemaining)
    parameters:
    - id: building
      type: Global.Building
    - id: turnsRemaining
      type: System.Int32
    content.vb: Public Sub New(building As Building, turnsRemaining As Integer)
  overload: GrandWarStrategy.Province.Construction.#ctor*
  nameWithType.vb: Construction.New(Building, Integer)
  fullName.vb: GrandWarStrategy.Province.Construction.New(Building, Integer)
  name.vb: New(Building, Integer)
references:
- uid: GrandWarStrategy.Province
  commentId: N:GrandWarStrategy.Province
  name: GrandWarStrategy.Province
  nameWithType: GrandWarStrategy.Province
  fullName: GrandWarStrategy.Province
  spec.csharp:
  - uid: GrandWarStrategy
    name: GrandWarStrategy
  - name: .
  - uid: GrandWarStrategy.Province
    name: Province
  spec.vb:
  - uid: GrandWarStrategy
    name: GrandWarStrategy
  - name: .
  - uid: GrandWarStrategy.Province
    name: Province
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.Building
  isExternal: true
  name: Building
  nameWithType: Building
  fullName: Building
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: GrandWarStrategy.Province.Construction.#ctor*
  commentId: Overload:GrandWarStrategy.Province.Construction.#ctor
  name: Construction
  nameWithType: Construction.Construction
  fullName: GrandWarStrategy.Province.Construction.Construction
  nameWithType.vb: Construction.New
  fullName.vb: GrandWarStrategy.Province.Construction.New
  name.vb: New
